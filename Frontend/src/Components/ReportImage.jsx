import React, { forwardRef } from 'react';
import './ReportImage.css';

const ReportImage = forwardRef(({ analysisResult, issues }, ref) => {
  // Fallbacks for empty data
  const contractName = analysisResult?.contractName || 'UnknownContract.sol';
  const lines = analysisResult?.lines ?? 'N/A';
  const score = analysisResult?.score ?? 'N/A';
  const total = analysisResult?.total ?? 'N/A';
  const vulnerabilities = analysisResult?.vulnerabilities ?? 0;
  // const status = analysisResult?.status ?? 'N/A';
  const issuesCount = Array.isArray(issues) ? issues.length : (analysisResult?.issues ?? 0);

  return (
    <div className="report-image-container" ref={ref}>
      <header className="report-header">
        <div className="report-title">Cerify Security Analysis Report</div>
        <div className="report-meta">
          <span>Target: <b>{contractName}</b></span>
          <span>Date: <b>{new Date().toLocaleString()}</b></span>
          <span>Lines of Code: <b>{lines}</b></span>
        </div>
      </header>
      <section className="report-summary">
        <div className="summary-item">
          <span className="summary-label">Score</span>
          <span className="summary-value">{score} / {total}</span>
        </div>
        <div className="summary-item">
          <span className="summary-label">Vulnerabilities</span>
          <span className="summary-value">{vulnerabilities}</span>
        </div>
        <div className="summary-item">
          <span className="summary-label">Issues</span>
          <span className="summary-value">{issuesCount}</span>
        </div>
        {/* <div className="summary-item">
          <span className="summary-label">Status</span>
          <span className="summary-value">{status}</span>
        </div> */}
      </section>
      <section className="report-issues">
        <div className="issues-title">Issues Detected</div>
        {Array.isArray(issues) && issues.length === 0 && (
          <div className="no-issues">No issues detected ðŸŽ‰</div>
        )}
        {Array.isArray(issues) && issues.map((issue, idx) => (
          <div className={`issue-card severity-${(issue.severity || 'low').toLowerCase()}`} key={idx}>
            <div className="issue-header">
              <span className="issue-id">{issue.id || `Issue #${idx + 1}`}</span>
              <span className="issue-severity">{issue.severity || 'Low'}</span>
            </div>
            <div className="issue-title">{issue.title || issue.type || 'Issue'}</div>
            <div className="issue-meta">
              {issue.contract && <span>Contract: <b>{issue.contract}</b></span>}
              {issue.function && <span>Function: <b>{issue.function}</b></span>}
            </div>
            <div className="issue-desc">{issue.description || issue.message || 'No description provided.'}</div>
          </div>
        ))}
      </section>
      <footer className="report-footer">
        <div>Report generated by <b>Cerify</b></div>
        <div className="report-version">v1.0 â€¢ {new Date().toLocaleDateString()}</div>
      </footer>
    </div>
  );
});

export default ReportImage;